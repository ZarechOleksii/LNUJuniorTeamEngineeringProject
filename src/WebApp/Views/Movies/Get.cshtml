@model Models.Entities.Movie
@using Models.Entities;
@{
    ViewData["Title"] = Model.Name;
}

<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="~/css/Movie/MoviePage.css" />
    <link rel="stylesheet" href="~/css/Movie/Comments.css" />
    <link rel="stylesheet" href="~/css/Movie/AddMovie.css" />
    <link rel="stylesheet" href="~/css/Movie/AddToFavourite.css" />
    <link rel="stylesheet" href="~/css/Movie/Rating.css" />
    <title>@ViewData["Title"]</title>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
</head>
<div>
    @if (User.Identity?.IsAuthenticated == true)
    {
        <script>
            $.ajax({
                url: "/Movies/CheckIfFavourite",
                type: "GET",
                data: { id_movie: '@Model.Id' },
                dataType: "text",
                success: function () {
                    var b = document.getElementsByClassName("favorite-button")[0];
                    b.setAttribute("onclick", "delete_from_favorite('@Model.Id')");
                    b.innerHTML = "Delete from Favorites";
                    b.setAttribute("class", "favorite-button delete");
                },
                error: function (req, status, error) {
                    var b = document.getElementsByClassName("favorite-button")[0];
                    b.setAttribute("onclick", "add_to_favorite('@Model.Id')");
                    b.innerHTML = "Add to Favorites";
                    b.setAttribute("class", "favorite-button add");
                }
            });
        </script>
    }
    <h1 class="movie-header">@Model.Name</h1>

    <iframe src=@Model.Url
            frameborder="0"
            class="movie-player"
            scrolling="no"
            allowfullscreen>
    </iframe>

    <div class="rating-container">
        <div>
            <div class="rating-form">
                @{
                    var found = Model.Rating.FirstOrDefault(q => q.User.UserName == User.Identity?.Name);
                    if (found != null)
                    {
                        <input name="Rate" type="range" min="1" max="10" class="rating-input" id="myRange" value="@found.Rate">
                        <script>
                            var slider2 = document.getElementById("myRange");
                            var width = (slider2.value - slider2.min) * 100 / (slider2.max - slider2.min) + '%';
                            slider2.style.backgroundSize = width;
                        </script>
                    }
                    else
                    {
                        <input name="Rate" type="range" min="1" max="10" class="rating-input" id="myRange">
                    }
                }
                <span id="demo" class="rating-value"></span>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <button value=@Model.Id onclick="addRate(this.value)">Add rate</button>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")"><div class="add-rate" style="cursor:pointer">Add rate</div></a>
                }

                <script>
                    var slider = document.getElementById("myRange");
                    var output = document.getElementById("demo");
                    output.innerHTML = slider.value;

                    slider.oninput = function() {
                      output.innerHTML = this.value;
                    }
                </script>
            </div>
            <h5 id="rate-mark">Average rate: @(@Model.Rating.Count == 0 ? "There are no rates yet" : Math.Round(@Model.Rating.Average(x => x.Rate), 2))</h5>
        </div>


        <div class="delete-buttons">
            @if (User.Identity?.IsAuthenticated == true)
            {
                <button value=@Model.Id class="favorite-button add" onclick="add_to_favorite(this.value)">Add to Favorites</button>
            }
            else
            {
                <a href="@Url.Action("Login", "Account")" style="text-decoration:none"><div class="favorite-button">Add to Favorites</div></a>
            }
            @if (User.IsInRole("Admin"))
            {
                <button value=@Model.Id class="edit-admin-button" onclick="location.href='@Url.Action("Edit", "Movies", new { id = @Model.Id}, null)'">Edit Movie</button>
                <button value=@Model.Id class="delete-admin-button" onclick="deleteMovieAdmin(this.value)">Delete Movie</button>
            }
        </div>

    </div>

    <p class="movie-description">@Model.Description</p>

    @if (User.Identity?.IsAuthenticated == true && !User.IsInRole("Banned"))
    {
        <div class="add-comment-container">
            <h4>Add comment:  </h4>
            <textarea id="comment-content" style="border: 1px solid;" name="Content" type="text" maxlength=500 required></textarea>
            <input name="MovieId" type="hidden" value=@Model.Id />
            <button onclick="addComment('@Model.Id')" type="submit">Post</button>
        </div>
    }
    else if (User.IsInRole("Banned"))
    {
        <p class="banned-text">
            This profile is banned - all your comments are deleted and you cannot publish new comments.
        </p>
    }
    else
    {
        <a asp-controller="Account" asp-action="Login">Sign in to add comments</a>
    }

    <div class="comment-container">
        <h4>Comments:</h4>
        <div id="comments">
            @foreach (var comment in Model.Comments)
            {
                <div class="comment">
                    <p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a href="/Account/User/@comment.UserId" style="text-decoration:none">
                                <b>@comment.User.UserName:</b>
                            </a>
                        }
                        else
                        {
                            <b>@comment.User.UserName:</b>
                        }
                        @comment.Content
                    </p>
                    <button value=@comment.Id
                        id="delete-comment-button-@comment.Id"
                        class="delete-comment-button"
                        type="submit"
                        onclick="DeleteComment(this.value)"
                        hidden=@(!User.IsInRole("Admin") && comment.User.UserName != User.Identity?.Name)>
                        Delete
                    </button>
                </div>
            }
        </div>
    </div>
</div>
<script src="/js/MoviePage.js"></script>
